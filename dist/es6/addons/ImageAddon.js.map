{"version":3,"file":"ImageAddon.js","sources":["../../../addons/addon-image/node_modules/sixel/lib/Colors.js","../../../addons/addon-image/out-es6/ImageRenderer.js","../../../addons/addon-image/out-es6/ImageStorage.js","../../../addons/addon-image/node_modules/xterm-wasm-parts/lib/base64/Base64Decoder.wasm.js","../../../addons/addon-image/out-es6/IIPHeaderParser.js","../../../addons/addon-image/out-es6/IIPMetrics.js","../../../addons/addon-image/out-es6/IIPHandler.js","../../../addons/addon-image/node_modules/sixel/lib/Decoder.js","../../../addons/addon-image/out-es6/SixelHandler.js","../../../addons/addon-image/out-es6/ImageAddon.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) 2019 Joerg Breitbart.\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_FOREGROUND = exports.DEFAULT_BACKGROUND = exports.PALETTE_ANSI_256 = exports.PALETTE_VT340_GREY = exports.PALETTE_VT340_COLOR = exports.normalizeHLS = exports.normalizeRGB = exports.nearestColorIndex = exports.fromRGBA8888 = exports.toRGBA8888 = exports.alpha = exports.blue = exports.green = exports.red = exports.BIG_ENDIAN = void 0;\n// FIXME: cleanup this mess, move things either to decoder/encoder, keep only shared things\n// system endianess\nexports.BIG_ENDIAN = new Uint8Array(new Uint32Array([0xFF000000]).buffer)[0] === 0xFF;\nif (exports.BIG_ENDIAN) {\n    console.warn('BE platform detected. This version of node-sixel works only on LE properly.');\n}\n// channel values\nfunction red(n) {\n    return n & 0xFF;\n}\nexports.red = red;\nfunction green(n) {\n    return (n >>> 8) & 0xFF;\n}\nexports.green = green;\nfunction blue(n) {\n    return (n >>> 16) & 0xFF;\n}\nexports.blue = blue;\nfunction alpha(n) {\n    return (n >>> 24) & 0xFF;\n}\nexports.alpha = alpha;\n/**\n * Convert RGB channels to native color RGBA8888.\n */\nfunction toRGBA8888(r, g, b, a = 255) {\n    return ((a & 0xFF) << 24 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF)) >>> 0; // ABGR32\n}\nexports.toRGBA8888 = toRGBA8888;\n/**\n * Convert native color to [r, g, b, a].\n */\nfunction fromRGBA8888(color) {\n    return [color & 0xFF, (color >> 8) & 0xFF, (color >> 16) & 0xFF, color >>> 24];\n}\nexports.fromRGBA8888 = fromRGBA8888;\n/**\n * Get index of nearest color in `palette` for `color`.\n * Uses euclidean distance without any luminescence correction.\n */\nfunction nearestColorIndex(color, palette) {\n    const r = red(color);\n    const g = green(color);\n    const b = blue(color);\n    let min = Number.MAX_SAFE_INTEGER;\n    let idx = -1;\n    // use euclidean distance (manhattan gives very poor results)\n    for (let i = 0; i < palette.length; ++i) {\n        const dr = r - palette[i][0];\n        const dg = g - palette[i][1];\n        const db = b - palette[i][2];\n        const d = dr * dr + dg * dg + db * db;\n        if (!d)\n            return i;\n        if (d < min) {\n            min = d;\n            idx = i;\n        }\n    }\n    return idx;\n}\nexports.nearestColorIndex = nearestColorIndex;\n// color conversions\n// HLS taken from: http://www.niwa.nu/2013/05/math-behind-colorspace-conversions-rgb-hsl\nfunction clamp(low, high, value) {\n    return Math.max(low, Math.min(value, high));\n}\nfunction h2c(t1, t2, c) {\n    if (c < 0)\n        c += 1;\n    if (c > 1)\n        c -= 1;\n    return c * 6 < 1\n        ? t2 + (t1 - t2) * 6 * c\n        : c * 2 < 1\n            ? t1\n            : c * 3 < 2\n                ? t2 + (t1 - t2) * (4 - c * 6)\n                : t2;\n}\nfunction HLStoRGB(h, l, s) {\n    if (!s) {\n        const v = Math.round(l * 255);\n        return toRGBA8888(v, v, v);\n    }\n    const t1 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const t2 = 2 * l - t1;\n    return toRGBA8888(clamp(0, 255, Math.round(h2c(t1, t2, h + 1 / 3) * 255)), clamp(0, 255, Math.round(h2c(t1, t2, h) * 255)), clamp(0, 255, Math.round(h2c(t1, t2, h - 1 / 3) * 255)));\n}\n/**\n * Normalize SIXEL RGB values (percent based, 0-100) to RGBA8888.\n */\nfunction normalizeRGB(r, g, b) {\n    return (0xFF000000 | Math.round(b / 100 * 255) << 16 | Math.round(g / 100 * 255) << 8 | Math.round(r / 100 * 255)) >>> 0; // ABGR32\n}\nexports.normalizeRGB = normalizeRGB;\n/**\n * Normalize SIXEL HLS values to RGBA8888. Applies hue correction of +240°.\n */\nfunction normalizeHLS(h, l, s) {\n    // Note: hue value is turned by 240° in VT340, all values given as fractions\n    return HLStoRGB((h + 240 % 360) / 360, l / 100, s / 100);\n}\nexports.normalizeHLS = normalizeHLS;\n/**\n * default palettes\n */\n// FIXME: move palettes to Decoder.ts\n/**\n * 16 predefined color registers of VT340 (values in %):\n * ```\n *                R   G   B\n * 0  Black       0   0   0\n * 1  Blue        20  20  80\n * 2  Red         80  13  13\n * 3  Green       20  80  20\n * 4  Magenta     80  20  80\n * 5  Cyan        20  80  80\n * 6  Yellow      80  80  20\n * 7  Gray 50%    53  53  53\n * 8  Gray 25%    26  26  26\n * 9  Blue*       33  33  60\n * 10 Red*        60  26  26\n * 11 Green*      33  60  33\n * 12 Magenta*    60  33  60\n * 13 Cyan*       33  60  60\n * 14 Yellow*     60  60  33\n * 15 Gray 75%    80  80  80\n * ```\n * (*) less saturated\n *\n * @see https://vt100.net/docs/vt3xx-gp/chapter2.html#S2.4\n*/\nexports.PALETTE_VT340_COLOR = new Uint32Array([\n    normalizeRGB(0, 0, 0),\n    normalizeRGB(20, 20, 80),\n    normalizeRGB(80, 13, 13),\n    normalizeRGB(20, 80, 20),\n    normalizeRGB(80, 20, 80),\n    normalizeRGB(20, 80, 80),\n    normalizeRGB(80, 80, 20),\n    normalizeRGB(53, 53, 53),\n    normalizeRGB(26, 26, 26),\n    normalizeRGB(33, 33, 60),\n    normalizeRGB(60, 26, 26),\n    normalizeRGB(33, 60, 33),\n    normalizeRGB(60, 33, 60),\n    normalizeRGB(33, 60, 60),\n    normalizeRGB(60, 60, 33),\n    normalizeRGB(80, 80, 80)\n]);\n/**\n * 16 predefined monochrome registers of VT340 (values in %):\n * ```\n *              R   G   B\n * 0  Black     0   0   0\n * 1  Gray-2    13  13  13\n * 2  Gray-4    26  26  26\n * 3  Gray-6    40  40  40\n * 4  Gray-1    6   6   6\n * 5  Gray-3    20  20  20\n * 6  Gray-5    33  33  33\n * 7  White 7   46  46  46\n * 8  Black 0   0   0   0\n * 9  Gray-2    13  13  13\n * 10 Gray-4    26  26  26\n * 11 Gray-6    40  40  40\n * 12 Gray-1    6   6   6\n * 13 Gray-3    20  20  20\n * 14 Gray-5    33  33  33\n * 15 White 7   46  46  46\n * ```\n *\n * @see https://vt100.net/docs/vt3xx-gp/chapter2.html#S2.4\n */\nexports.PALETTE_VT340_GREY = new Uint32Array([\n    normalizeRGB(0, 0, 0),\n    normalizeRGB(13, 13, 13),\n    normalizeRGB(26, 26, 26),\n    normalizeRGB(40, 40, 40),\n    normalizeRGB(6, 6, 6),\n    normalizeRGB(20, 20, 20),\n    normalizeRGB(33, 33, 33),\n    normalizeRGB(46, 46, 46),\n    normalizeRGB(0, 0, 0),\n    normalizeRGB(13, 13, 13),\n    normalizeRGB(26, 26, 26),\n    normalizeRGB(40, 40, 40),\n    normalizeRGB(6, 6, 6),\n    normalizeRGB(20, 20, 20),\n    normalizeRGB(33, 33, 33),\n    normalizeRGB(46, 46, 46)\n]);\n/**\n * 256 predefined ANSI colors.\n *\n * @see https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit\n */\nexports.PALETTE_ANSI_256 = (() => {\n    // 16 lower colors (taken from xterm)\n    const p = [\n        toRGBA8888(0, 0, 0),\n        toRGBA8888(205, 0, 0),\n        toRGBA8888(0, 205, 0),\n        toRGBA8888(205, 205, 0),\n        toRGBA8888(0, 0, 238),\n        toRGBA8888(205, 0, 205),\n        toRGBA8888(0, 250, 205),\n        toRGBA8888(229, 229, 229),\n        toRGBA8888(127, 127, 127),\n        toRGBA8888(255, 0, 0),\n        toRGBA8888(0, 255, 0),\n        toRGBA8888(255, 255, 0),\n        toRGBA8888(92, 92, 255),\n        toRGBA8888(255, 0, 255),\n        toRGBA8888(0, 255, 255),\n        toRGBA8888(255, 255, 255),\n    ];\n    // colors up to 232\n    const d = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; ++r) {\n        for (let g = 0; g < 6; ++g) {\n            for (let b = 0; b < 6; ++b) {\n                p.push(toRGBA8888(d[r], d[g], d[b]));\n            }\n        }\n    }\n    // grey scale to up 255\n    for (let v = 8; v <= 238; v += 10) {\n        p.push(toRGBA8888(v, v, v));\n    }\n    return new Uint32Array(p);\n})();\n/**\n * Background: Black by default.\n * Foreground: White by default.\n *\n * Background color is used whenever a fill color is needed and not explicitly set.\n * Foreground color is used as default initial sixel color.\n */\nexports.DEFAULT_BACKGROUND = toRGBA8888(0, 0, 0, 255);\nexports.DEFAULT_FOREGROUND = toRGBA8888(255, 255, 255, 255);\n//# sourceMappingURL=Colors.js.map","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport * as Colors from 'sixel/lib/Colors';\nconst toRGBA8888 = Colors.toRGBA8888;\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nconst PLACEHOLDER_LENGTH = 4096;\nconst PLACEHOLDER_HEIGHT = 24;\n/**\n * ImageRenderer - terminal frontend extension:\n * - provide primitives for canvas, ImageData, Bitmap (static)\n * - add canvas layer to DOM (browser only for now)\n * - draw image tiles onRender\n */\nexport class ImageRenderer extends Disposable {\n    // drawing primitive - canvas\n    static createCanvas(localDocument, width, height) {\n        /**\n         * NOTE: We normally dont care, from which document the canvas\n         * gets created, so we can fall back to global document,\n         * if the terminal has no document associated yet.\n         * This way early image loads before calling .open keep working\n         * (still discouraged though, as the metrics will be screwed up).\n         * Only the DOM output canvas should be on the terminal's document,\n         * which gets explicitly checked in `insertLayerToDom`.\n         */\n        const canvas = (localDocument || document).createElement('canvas');\n        canvas.width = width | 0;\n        canvas.height = height | 0;\n        return canvas;\n    }\n    // drawing primitive - ImageData with optional buffer\n    static createImageData(ctx, width, height, buffer) {\n        if (typeof ImageData !== 'function') {\n            const imgData = ctx.createImageData(width, height);\n            if (buffer) {\n                imgData.data.set(new Uint8ClampedArray(buffer, 0, width * height * 4));\n            }\n            return imgData;\n        }\n        return buffer\n            ? new ImageData(new Uint8ClampedArray(buffer, 0, width * height * 4), width, height)\n            : new ImageData(width, height);\n    }\n    // drawing primitive - ImageBitmap\n    static createImageBitmap(img) {\n        if (typeof createImageBitmap !== 'function') {\n            return Promise.resolve(undefined);\n        }\n        return createImageBitmap(img);\n    }\n    constructor(_terminal) {\n        super();\n        this._terminal = _terminal;\n        this._optionsRefresh = this.register(new MutableDisposable());\n        this._oldOpen = this._terminal._core.open;\n        this._terminal._core.open = (parent) => {\n            var _a;\n            (_a = this._oldOpen) === null || _a === void 0 ? void 0 : _a.call(this._terminal._core, parent);\n            this._open();\n        };\n        if (this._terminal._core.screenElement) {\n            this._open();\n        }\n        // hack to spot fontSize changes\n        this._optionsRefresh.value = this._terminal._core.optionsService.onOptionChange(option => {\n            var _a;\n            if (option === 'fontSize') {\n                this.rescaleCanvas();\n                (_a = this._renderService) === null || _a === void 0 ? void 0 : _a.refreshRows(0, this._terminal.rows);\n            }\n        });\n        this.register(toDisposable(() => {\n            var _a;\n            this.removeLayerFromDom();\n            if (this._terminal._core && this._oldOpen) {\n                this._terminal._core.open = this._oldOpen;\n                this._oldOpen = undefined;\n            }\n            if (this._renderService && this._oldSetRenderer) {\n                this._renderService.setRenderer = this._oldSetRenderer;\n                this._oldSetRenderer = undefined;\n            }\n            this._renderService = undefined;\n            this.canvas = undefined;\n            this._ctx = undefined;\n            (_a = this._placeholderBitmap) === null || _a === void 0 ? void 0 : _a.close();\n            this._placeholderBitmap = undefined;\n            this._placeholder = undefined;\n        }));\n    }\n    /**\n     * Enable the placeholder.\n     */\n    showPlaceholder(value) {\n        var _a, _b;\n        if (value) {\n            if (!this._placeholder && this.cellSize.height !== -1) {\n                this._createPlaceHolder(Math.max(this.cellSize.height + 1, PLACEHOLDER_HEIGHT));\n            }\n        }\n        else {\n            (_a = this._placeholderBitmap) === null || _a === void 0 ? void 0 : _a.close();\n            this._placeholderBitmap = undefined;\n            this._placeholder = undefined;\n        }\n        (_b = this._renderService) === null || _b === void 0 ? void 0 : _b.refreshRows(0, this._terminal.rows);\n    }\n    /**\n     * Dimensions of the terminal.\n     * Forwarded from internal render service.\n     */\n    get dimensions() {\n        var _a;\n        return (_a = this._renderService) === null || _a === void 0 ? void 0 : _a.dimensions;\n    }\n    /**\n     * Current cell size (float).\n     */\n    get cellSize() {\n        var _a, _b;\n        return {\n            width: ((_a = this.dimensions) === null || _a === void 0 ? void 0 : _a.css.cell.width) || -1,\n            height: ((_b = this.dimensions) === null || _b === void 0 ? void 0 : _b.css.cell.height) || -1\n        };\n    }\n    /**\n     * Clear a region of the image layer canvas.\n     */\n    clearLines(start, end) {\n        var _a, _b, _c, _d;\n        (_a = this._ctx) === null || _a === void 0 ? void 0 : _a.clearRect(0, start * (((_b = this.dimensions) === null || _b === void 0 ? void 0 : _b.css.cell.height) || 0), ((_c = this.dimensions) === null || _c === void 0 ? void 0 : _c.css.canvas.width) || 0, (++end - start) * (((_d = this.dimensions) === null || _d === void 0 ? void 0 : _d.css.cell.height) || 0));\n    }\n    /**\n     * Clear whole image canvas.\n     */\n    clearAll() {\n        var _a, _b, _c;\n        (_a = this._ctx) === null || _a === void 0 ? void 0 : _a.clearRect(0, 0, ((_b = this.canvas) === null || _b === void 0 ? void 0 : _b.width) || 0, ((_c = this.canvas) === null || _c === void 0 ? void 0 : _c.height) || 0);\n    }\n    /**\n     * Draw neighboring tiles on the image layer canvas.\n     */\n    draw(imgSpec, tileId, col, row, count = 1) {\n        if (!this._ctx) {\n            return;\n        }\n        const { width, height } = this.cellSize;\n        // Don't try to draw anything, if we cannot get valid renderer metrics.\n        if (width === -1 || height === -1) {\n            return;\n        }\n        this._rescaleImage(imgSpec, width, height);\n        const img = imgSpec.actual;\n        const cols = Math.ceil(img.width / width);\n        const sx = (tileId % cols) * width;\n        const sy = Math.floor(tileId / cols) * height;\n        const dx = col * width;\n        const dy = row * height;\n        // safari bug: never access image source out of bounds\n        const finalWidth = count * width + sx > img.width ? img.width - sx : count * width;\n        const finalHeight = sy + height > img.height ? img.height - sy : height;\n        // Floor all pixel offsets to get stable tile mapping without any overflows.\n        // Note: For not pixel perfect aligned cells like in the DOM renderer\n        // this will move a tile slightly to the top/left (subpixel range, thus ignore it).\n        // FIX #34: avoid striping on displays with pixelDeviceRatio != 1 by ceiling height and width\n        this._ctx.drawImage(img, Math.floor(sx), Math.floor(sy), Math.ceil(finalWidth), Math.ceil(finalHeight), Math.floor(dx), Math.floor(dy), Math.ceil(finalWidth), Math.ceil(finalHeight));\n    }\n    /**\n     * Extract a single tile from an image.\n     */\n    extractTile(imgSpec, tileId) {\n        const { width, height } = this.cellSize;\n        // Don't try to draw anything, if we cannot get valid renderer metrics.\n        if (width === -1 || height === -1) {\n            return;\n        }\n        this._rescaleImage(imgSpec, width, height);\n        const img = imgSpec.actual;\n        const cols = Math.ceil(img.width / width);\n        const sx = (tileId % cols) * width;\n        const sy = Math.floor(tileId / cols) * height;\n        const finalWidth = width + sx > img.width ? img.width - sx : width;\n        const finalHeight = sy + height > img.height ? img.height - sy : height;\n        const canvas = ImageRenderer.createCanvas(this.document, finalWidth, finalHeight);\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.drawImage(img, Math.floor(sx), Math.floor(sy), Math.floor(finalWidth), Math.floor(finalHeight), 0, 0, Math.floor(finalWidth), Math.floor(finalHeight));\n            return canvas;\n        }\n    }\n    /**\n     * Draw a line with placeholder on the image layer canvas.\n     */\n    drawPlaceholder(col, row, count = 1) {\n        if (this._ctx) {\n            const { width, height } = this.cellSize;\n            // Don't try to draw anything, if we cannot get valid renderer metrics.\n            if (width === -1 || height === -1) {\n                return;\n            }\n            if (!this._placeholder) {\n                this._createPlaceHolder(Math.max(height + 1, PLACEHOLDER_HEIGHT));\n            }\n            else if (height >= this._placeholder.height) {\n                this._createPlaceHolder(height + 1);\n            }\n            if (!this._placeholder)\n                return;\n            this._ctx.drawImage(this._placeholderBitmap || this._placeholder, col * width, (row * height) % 2 ? 0 : 1, // needs %2 offset correction\n            width * count, height, col * width, row * height, width * count, height);\n        }\n    }\n    /**\n     * Rescale image layer canvas if needed.\n     * Checked once from `ImageStorage.render`.\n     */\n    rescaleCanvas() {\n        if (!this.canvas) {\n            return;\n        }\n        if (this.canvas.width !== this.dimensions.css.canvas.width || this.canvas.height !== this.dimensions.css.canvas.height) {\n            this.canvas.width = this.dimensions.css.canvas.width || 0;\n            this.canvas.height = this.dimensions.css.canvas.height || 0;\n        }\n    }\n    /**\n     * Rescale image in storage if needed.\n     */\n    _rescaleImage(spec, currentWidth, currentHeight) {\n        if (currentWidth === spec.actualCellSize.width && currentHeight === spec.actualCellSize.height) {\n            return;\n        }\n        const { width: originalWidth, height: originalHeight } = spec.origCellSize;\n        if (currentWidth === originalWidth && currentHeight === originalHeight) {\n            spec.actual = spec.orig;\n            spec.actualCellSize.width = originalWidth;\n            spec.actualCellSize.height = originalHeight;\n            return;\n        }\n        const canvas = ImageRenderer.createCanvas(this.document, Math.ceil(spec.orig.width * currentWidth / originalWidth), Math.ceil(spec.orig.height * currentHeight / originalHeight));\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.drawImage(spec.orig, 0, 0, canvas.width, canvas.height);\n            spec.actual = canvas;\n            spec.actualCellSize.width = currentWidth;\n            spec.actualCellSize.height = currentHeight;\n        }\n    }\n    /**\n     * Lazy init for the renderer.\n     */\n    _open() {\n        this._renderService = this._terminal._core._renderService;\n        this._oldSetRenderer = this._renderService.setRenderer.bind(this._renderService);\n        this._renderService.setRenderer = (renderer) => {\n            var _a;\n            this.removeLayerFromDom();\n            (_a = this._oldSetRenderer) === null || _a === void 0 ? void 0 : _a.call(this._renderService, renderer);\n        };\n    }\n    insertLayerToDom() {\n        var _a, _b;\n        // make sure that the terminal is attached to a document and to DOM\n        if (this.document && this._terminal._core.screenElement) {\n            if (!this.canvas) {\n                this.canvas = ImageRenderer.createCanvas(this.document, ((_a = this.dimensions) === null || _a === void 0 ? void 0 : _a.css.canvas.width) || 0, ((_b = this.dimensions) === null || _b === void 0 ? void 0 : _b.css.canvas.height) || 0);\n                this.canvas.classList.add('xterm-image-layer');\n                this._terminal._core.screenElement.appendChild(this.canvas);\n                this._ctx = this.canvas.getContext('2d', { alpha: true, desynchronized: true });\n                this.clearAll();\n            }\n        }\n        else {\n            console.warn('image addon: cannot insert output canvas to DOM, missing document or screenElement');\n        }\n    }\n    removeLayerFromDom() {\n        if (this.canvas) {\n            this._ctx = undefined;\n            this.canvas.remove();\n            this.canvas = undefined;\n        }\n    }\n    _createPlaceHolder(height = PLACEHOLDER_HEIGHT) {\n        var _a;\n        (_a = this._placeholderBitmap) === null || _a === void 0 ? void 0 : _a.close();\n        this._placeholderBitmap = undefined;\n        // create blueprint to fill placeholder with\n        const bWidth = 32; // must be 2^n\n        const blueprint = ImageRenderer.createCanvas(this.document, bWidth, height);\n        const ctx = blueprint.getContext('2d', { alpha: false });\n        if (!ctx)\n            return;\n        const imgData = ImageRenderer.createImageData(ctx, bWidth, height);\n        const d32 = new Uint32Array(imgData.data.buffer);\n        const black = toRGBA8888(0, 0, 0);\n        const white = toRGBA8888(255, 255, 255);\n        d32.fill(black);\n        for (let y = 0; y < height; ++y) {\n            const shift = y % 2;\n            const offset = y * bWidth;\n            for (let x = 0; x < bWidth; x += 2) {\n                d32[offset + x + shift] = white;\n            }\n        }\n        ctx.putImageData(imgData, 0, 0);\n        // create placeholder line, width aligned to blueprint width\n        const width = (screen.width + bWidth - 1) & ~(bWidth - 1) || PLACEHOLDER_LENGTH;\n        this._placeholder = ImageRenderer.createCanvas(this.document, width, height);\n        const ctx2 = this._placeholder.getContext('2d', { alpha: false });\n        if (!ctx2) {\n            this._placeholder = undefined;\n            return;\n        }\n        for (let i = 0; i < width; i += bWidth) {\n            ctx2.drawImage(blueprint, i, 0);\n        }\n        ImageRenderer.createImageBitmap(this._placeholder).then(bitmap => this._placeholderBitmap = bitmap);\n    }\n    get document() {\n        var _a;\n        return (_a = this._terminal._core._coreBrowserService) === null || _a === void 0 ? void 0 : _a.window.document;\n    }\n}\n//# sourceMappingURL=ImageRenderer.js.map\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { ImageRenderer } from './ImageRenderer';\n// fallback default cell size\nexport const CELL_SIZE_DEFAULT = {\n    width: 7,\n    height: 14\n};\n/**\n * Extend extended attribute to also hold image tile information.\n *\n * Object definition is copied from base repo to fully mimick its behavior.\n * Image data is added as additional public properties `imageId` and `tileId`.\n */\nclass ExtendedAttrsImage {\n    get ext() {\n        if (this._urlId) {\n            return ((this._ext & ~469762048 /* ExtFlags.UNDERLINE_STYLE */) |\n                (this.underlineStyle << 26));\n        }\n        return this._ext;\n    }\n    set ext(value) { this._ext = value; }\n    get underlineStyle() {\n        // Always return the URL style if it has one\n        if (this._urlId) {\n            return 5 /* UnderlineStyle.DASHED */;\n        }\n        return (this._ext & 469762048 /* ExtFlags.UNDERLINE_STYLE */) >> 26;\n    }\n    set underlineStyle(value) {\n        this._ext &= ~469762048 /* ExtFlags.UNDERLINE_STYLE */;\n        this._ext |= (value << 26) & 469762048 /* ExtFlags.UNDERLINE_STYLE */;\n    }\n    get underlineColor() {\n        return this._ext & (50331648 /* Attributes.CM_MASK */ | 16777215 /* Attributes.RGB_MASK */);\n    }\n    set underlineColor(value) {\n        this._ext &= ~(50331648 /* Attributes.CM_MASK */ | 16777215 /* Attributes.RGB_MASK */);\n        this._ext |= value & (50331648 /* Attributes.CM_MASK */ | 16777215 /* Attributes.RGB_MASK */);\n    }\n    get underlineVariantOffset() {\n        const val = (this._ext & 3758096384 /* ExtFlags.VARIANT_OFFSET */) >> 29;\n        if (val < 0) {\n            return val ^ 0xFFFFFFF8;\n        }\n        return val;\n    }\n    set underlineVariantOffset(value) {\n        this._ext &= ~3758096384 /* ExtFlags.VARIANT_OFFSET */;\n        this._ext |= (value << 29) & 3758096384 /* ExtFlags.VARIANT_OFFSET */;\n    }\n    get urlId() {\n        return this._urlId;\n    }\n    set urlId(value) {\n        this._urlId = value;\n    }\n    constructor(ext = 0, urlId = 0, imageId = -1, tileId = -1) {\n        this.imageId = imageId;\n        this.tileId = tileId;\n        this._ext = 0;\n        this._urlId = 0;\n        this._ext = ext;\n        this._urlId = urlId;\n    }\n    clone() {\n        /**\n         * Technically we dont need a clone variant of ExtendedAttrsImage,\n         * as we never clone a cell holding image data.\n         * Note: Clone is only meant to be used by the InputHandler for\n         * sticky attributes, which is never the case for image data.\n         * We still provide a proper clone method to reflect the full ext attr\n         * state in case there are future use cases for clone.\n         */\n        return new ExtendedAttrsImage(this._ext, this._urlId, this.imageId, this.tileId);\n    }\n    isEmpty() {\n        return this.underlineStyle === 0 /* UnderlineStyle.NONE */ && this._urlId === 0 && this.imageId === -1;\n    }\n}\nconst EMPTY_ATTRS = new ExtendedAttrsImage();\n/**\n * ImageStorage - extension of CoreTerminal:\n * - hold image data\n * - write/read image data to/from buffer\n *\n * TODO: image composition for overwrites\n */\nexport class ImageStorage {\n    constructor(_terminal, _renderer, _opts) {\n        this._terminal = _terminal;\n        this._renderer = _renderer;\n        this._opts = _opts;\n        // storage\n        this._images = new Map();\n        // last used id\n        this._lastId = 0;\n        // last evicted id\n        this._lowestId = 0;\n        // whether a full clear happened before\n        this._fullyCleared = false;\n        // whether render should do a full clear\n        this._needsFullClear = false;\n        // hard limit of stored pixels (fallback limit of 10 MB)\n        this._pixelLimit = 2500000;\n        try {\n            this.setLimit(this._opts.storageLimit);\n        }\n        catch (e) {\n            console.error(e.message);\n            console.warn(`storageLimit is set to ${this.getLimit()} MB`);\n        }\n        this._viewportMetrics = {\n            cols: this._terminal.cols,\n            rows: this._terminal.rows\n        };\n    }\n    dispose() {\n        this.reset();\n    }\n    reset() {\n        var _a;\n        for (const spec of this._images.values()) {\n            (_a = spec.marker) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        // NOTE: marker.dispose above already calls ImageBitmap.close\n        // therefore we can just wipe the map here\n        this._images.clear();\n        this._renderer.clearAll();\n    }\n    getLimit() {\n        return this._pixelLimit * 4 / 1000000;\n    }\n    setLimit(value) {\n        if (value < 0.5 || value > 1000) {\n            throw RangeError('invalid storageLimit, should be at least 0.5 MB and not exceed 1G');\n        }\n        this._pixelLimit = (value / 4 * 1000000) >>> 0;\n        this._evictOldest(0);\n    }\n    getUsage() {\n        return this._getStoredPixels() * 4 / 1000000;\n    }\n    _getStoredPixels() {\n        let storedPixels = 0;\n        for (const spec of this._images.values()) {\n            if (spec.orig) {\n                storedPixels += spec.orig.width * spec.orig.height;\n                if (spec.actual && spec.actual !== spec.orig) {\n                    storedPixels += spec.actual.width * spec.actual.height;\n                }\n            }\n        }\n        return storedPixels;\n    }\n    _delImg(id) {\n        const spec = this._images.get(id);\n        this._images.delete(id);\n        // FIXME: really ugly workaround to get bitmaps deallocated :(\n        if (spec && window.ImageBitmap && spec.orig instanceof ImageBitmap) {\n            spec.orig.close();\n        }\n    }\n    /**\n     * Wipe canvas and images on alternate buffer.\n     */\n    wipeAlternate() {\n        var _a;\n        // remove all alternate tagged images\n        const zero = [];\n        for (const [id, spec] of this._images.entries()) {\n            if (spec.bufferType === 'alternate') {\n                (_a = spec.marker) === null || _a === void 0 ? void 0 : _a.dispose();\n                zero.push(id);\n            }\n        }\n        for (const id of zero) {\n            this._delImg(id);\n        }\n        // mark canvas to be wiped on next render\n        this._needsFullClear = true;\n        this._fullyCleared = false;\n    }\n    /**\n     * Only advance text cursor.\n     * This is an edge case from empty sixels carrying only a height but no pixels.\n     * Partially fixes https://github.com/jerch/xterm-addon-image/issues/37.\n     */\n    advanceCursor(height) {\n        if (this._opts.sixelScrolling) {\n            let cellSize = this._renderer.cellSize;\n            if (cellSize.width === -1 || cellSize.height === -1) {\n                cellSize = CELL_SIZE_DEFAULT;\n            }\n            const rows = Math.ceil(height / cellSize.height);\n            for (let i = 1; i < rows; ++i) {\n                this._terminal._core._inputHandler.lineFeed();\n            }\n        }\n    }\n    /**\n     * Method to add an image to the storage.\n     */\n    addImage(img) {\n        var _a;\n        // never allow storage to exceed memory limit\n        this._evictOldest(img.width * img.height);\n        // calc rows x cols needed to display the image\n        let cellSize = this._renderer.cellSize;\n        if (cellSize.width === -1 || cellSize.height === -1) {\n            cellSize = CELL_SIZE_DEFAULT;\n        }\n        const cols = Math.ceil(img.width / cellSize.width);\n        const rows = Math.ceil(img.height / cellSize.height);\n        const imageId = ++this._lastId;\n        const buffer = this._terminal._core.buffer;\n        const termCols = this._terminal.cols;\n        const termRows = this._terminal.rows;\n        const originX = buffer.x;\n        const originY = buffer.y;\n        let offset = originX;\n        let tileCount = 0;\n        if (!this._opts.sixelScrolling) {\n            buffer.x = 0;\n            buffer.y = 0;\n            offset = 0;\n        }\n        this._terminal._core._inputHandler._dirtyRowTracker.markDirty(buffer.y);\n        for (let row = 0; row < rows; ++row) {\n            const line = buffer.lines.get(buffer.y + buffer.ybase);\n            for (let col = 0; col < cols; ++col) {\n                if (offset + col >= termCols)\n                    break;\n                this._writeToCell(line, offset + col, imageId, row * cols + col);\n                tileCount++;\n            }\n            if (this._opts.sixelScrolling) {\n                if (row < rows - 1)\n                    this._terminal._core._inputHandler.lineFeed();\n            }\n            else {\n                if (++buffer.y >= termRows)\n                    break;\n            }\n            buffer.x = offset;\n        }\n        this._terminal._core._inputHandler._dirtyRowTracker.markDirty(buffer.y);\n        // cursor positioning modes\n        if (this._opts.sixelScrolling) {\n            buffer.x = offset;\n        }\n        else {\n            buffer.x = originX;\n            buffer.y = originY;\n        }\n        // deleted images with zero tile count\n        const zero = [];\n        for (const [id, spec] of this._images.entries()) {\n            if (spec.tileCount < 1) {\n                (_a = spec.marker) === null || _a === void 0 ? void 0 : _a.dispose();\n                zero.push(id);\n            }\n        }\n        for (const id of zero) {\n            this._delImg(id);\n        }\n        // eviction marker:\n        // delete the image when the marker gets disposed\n        const endMarker = this._terminal.registerMarker(0);\n        endMarker === null || endMarker === void 0 ? void 0 : endMarker.onDispose(() => {\n            const spec = this._images.get(imageId);\n            if (spec) {\n                this._delImg(imageId);\n            }\n        });\n        // since markers do not work on alternate for some reason,\n        // we evict images here manually\n        if (this._terminal.buffer.active.type === 'alternate') {\n            this._evictOnAlternate();\n        }\n        // create storage entry\n        const imgSpec = {\n            orig: img,\n            origCellSize: cellSize,\n            actual: img,\n            actualCellSize: Object.assign({}, cellSize),\n            marker: endMarker || undefined,\n            tileCount,\n            bufferType: this._terminal.buffer.active.type\n        };\n        // finally add the image\n        this._images.set(imageId, imgSpec);\n    }\n    /**\n     * Render method. Collects buffer information and triggers\n     * canvas updates.\n     */\n    // TODO: Should we move this to the ImageRenderer?\n    render(range) {\n        // setup image canvas in case we have none yet, but have images in store\n        if (!this._renderer.canvas && this._images.size) {\n            this._renderer.insertLayerToDom();\n            // safety measure - in case we cannot spawn a canvas at all, just exit\n            if (!this._renderer.canvas) {\n                return;\n            }\n        }\n        // rescale if needed\n        this._renderer.rescaleCanvas();\n        // exit early if we dont have any images to test for\n        if (!this._images.size) {\n            if (!this._fullyCleared) {\n                this._renderer.clearAll();\n                this._fullyCleared = true;\n                this._needsFullClear = false;\n            }\n            if (this._renderer.canvas) {\n                this._renderer.removeLayerFromDom();\n            }\n            return;\n        }\n        // buffer switches force a full clear\n        if (this._needsFullClear) {\n            this._renderer.clearAll();\n            this._fullyCleared = true;\n            this._needsFullClear = false;\n        }\n        const { start, end } = range;\n        const buffer = this._terminal._core.buffer;\n        const cols = this._terminal._core.cols;\n        // clear drawing area\n        this._renderer.clearLines(start, end);\n        // walk all cells in viewport and draw tiles found\n        for (let row = start; row <= end; ++row) {\n            const line = buffer.lines.get(row + buffer.ydisp);\n            if (!line)\n                return;\n            for (let col = 0; col < cols; ++col) {\n                if (line.getBg(col) & 268435456 /* BgFlags.HAS_EXTENDED */) {\n                    let e = line._extendedAttrs[col] || EMPTY_ATTRS;\n                    const imageId = e.imageId;\n                    if (imageId === undefined || imageId === -1) {\n                        continue;\n                    }\n                    const imgSpec = this._images.get(imageId);\n                    if (e.tileId !== -1) {\n                        const startTile = e.tileId;\n                        const startCol = col;\n                        let count = 1;\n                        /**\n                         * merge tiles to the right into a single draw call, if:\n                         * - not at end of line\n                         * - cell has same image id\n                         * - cell has consecutive tile id\n                         */\n                        while (++col < cols\n                            && (line.getBg(col) & 268435456 /* BgFlags.HAS_EXTENDED */)\n                            && (e = line._extendedAttrs[col] || EMPTY_ATTRS)\n                            && (e.imageId === imageId)\n                            && (e.tileId === startTile + count)) {\n                            count++;\n                        }\n                        col--;\n                        if (imgSpec) {\n                            if (imgSpec.actual) {\n                                this._renderer.draw(imgSpec, startTile, startCol, row, count);\n                            }\n                        }\n                        else if (this._opts.showPlaceholder) {\n                            this._renderer.drawPlaceholder(startCol, row, count);\n                        }\n                        this._fullyCleared = false;\n                    }\n                }\n            }\n        }\n    }\n    viewportResize(metrics) {\n        var _a;\n        // exit early if we have nothing in storage\n        if (!this._images.size) {\n            this._viewportMetrics = metrics;\n            return;\n        }\n        // handle only viewport width enlargements, exit all other cases\n        // TODO: needs patch for tile counter\n        if (this._viewportMetrics.cols >= metrics.cols) {\n            this._viewportMetrics = metrics;\n            return;\n        }\n        // walk scrollbuffer at old col width to find all possible expansion matches\n        const buffer = this._terminal._core.buffer;\n        const rows = buffer.lines.length;\n        const oldCol = this._viewportMetrics.cols - 1;\n        for (let row = 0; row < rows; ++row) {\n            const line = buffer.lines.get(row);\n            if (line.getBg(oldCol) & 268435456 /* BgFlags.HAS_EXTENDED */) {\n                const e = line._extendedAttrs[oldCol] || EMPTY_ATTRS;\n                const imageId = e.imageId;\n                if (imageId === undefined || imageId === -1) {\n                    continue;\n                }\n                const imgSpec = this._images.get(imageId);\n                if (!imgSpec) {\n                    continue;\n                }\n                // found an image tile at oldCol, check if it qualifies for right exapansion\n                const tilesPerRow = Math.ceil((((_a = imgSpec.actual) === null || _a === void 0 ? void 0 : _a.width) || 0) / imgSpec.actualCellSize.width);\n                if ((e.tileId % tilesPerRow) + 1 >= tilesPerRow) {\n                    continue;\n                }\n                // expand only if right side is empty (nothing got wrapped from below)\n                let hasData = false;\n                for (let rightCol = oldCol + 1; rightCol > metrics.cols; ++rightCol) {\n                    if (line._data[rightCol * 3 /* Cell.SIZE */ + 0 /* Cell.CONTENT */] & 4194303 /* Content.HAS_CONTENT_MASK */) {\n                        hasData = true;\n                        break;\n                    }\n                }\n                if (hasData) {\n                    continue;\n                }\n                // do right expansion on terminal buffer\n                const end = Math.min(metrics.cols, tilesPerRow - (e.tileId % tilesPerRow) + oldCol);\n                let lastTile = e.tileId;\n                for (let expandCol = oldCol + 1; expandCol < end; ++expandCol) {\n                    this._writeToCell(line, expandCol, imageId, ++lastTile);\n                    imgSpec.tileCount++;\n                }\n            }\n        }\n        // store new viewport metrics\n        this._viewportMetrics = metrics;\n    }\n    /**\n     * Retrieve original canvas at buffer position.\n     */\n    getImageAtBufferCell(x, y) {\n        var _a, _b;\n        const buffer = this._terminal._core.buffer;\n        const line = buffer.lines.get(y);\n        if (line && line.getBg(x) & 268435456 /* BgFlags.HAS_EXTENDED */) {\n            const e = line._extendedAttrs[x] || EMPTY_ATTRS;\n            if (e.imageId && e.imageId !== -1) {\n                const orig = (_a = this._images.get(e.imageId)) === null || _a === void 0 ? void 0 : _a.orig;\n                if (window.ImageBitmap && orig instanceof ImageBitmap) {\n                    const canvas = ImageRenderer.createCanvas(window.document, orig.width, orig.height);\n                    (_b = canvas.getContext('2d')) === null || _b === void 0 ? void 0 : _b.drawImage(orig, 0, 0, orig.width, orig.height);\n                    return canvas;\n                }\n                return orig;\n            }\n        }\n    }\n    /**\n     * Extract active single tile at buffer position.\n     */\n    extractTileAtBufferCell(x, y) {\n        const buffer = this._terminal._core.buffer;\n        const line = buffer.lines.get(y);\n        if (line && line.getBg(x) & 268435456 /* BgFlags.HAS_EXTENDED */) {\n            const e = line._extendedAttrs[x] || EMPTY_ATTRS;\n            if (e.imageId && e.imageId !== -1 && e.tileId !== -1) {\n                const spec = this._images.get(e.imageId);\n                if (spec) {\n                    return this._renderer.extractTile(spec, e.tileId);\n                }\n            }\n        }\n    }\n    // TODO: Do we need some blob offloading tricks here to avoid early eviction?\n    // also see https://stackoverflow.com/questions/28307789/is-there-any-limitation-on-javascript-max-blob-size\n    _evictOldest(room) {\n        var _a;\n        const used = this._getStoredPixels();\n        let current = used;\n        while (this._pixelLimit < current + room && this._images.size) {\n            const spec = this._images.get(++this._lowestId);\n            if (spec && spec.orig) {\n                current -= spec.orig.width * spec.orig.height;\n                if (spec.actual && spec.orig !== spec.actual) {\n                    current -= spec.actual.width * spec.actual.height;\n                }\n                (_a = spec.marker) === null || _a === void 0 ? void 0 : _a.dispose();\n                this._delImg(this._lowestId);\n            }\n        }\n        return used - current;\n    }\n    _writeToCell(line, x, imageId, tileId) {\n        if (line._data[x * 3 /* Cell.SIZE */ + 2 /* Cell.BG */] & 268435456 /* BgFlags.HAS_EXTENDED */) {\n            const old = line._extendedAttrs[x];\n            if (old) {\n                if (old.imageId !== undefined) {\n                    // found an old ExtendedAttrsImage, since we know that\n                    // they are always isolated instances (single cell usage),\n                    // we can re-use it and just update their id entries\n                    const oldSpec = this._images.get(old.imageId);\n                    if (oldSpec) {\n                        // early eviction for in-viewport overwrites\n                        oldSpec.tileCount--;\n                    }\n                    old.imageId = imageId;\n                    old.tileId = tileId;\n                    return;\n                }\n                // found a plain ExtendedAttrs instance, clone it to new entry\n                line._extendedAttrs[x] = new ExtendedAttrsImage(old.ext, old.urlId, imageId, tileId);\n                return;\n            }\n        }\n        // fall-through: always create new ExtendedAttrsImage entry\n        line._data[x * 3 /* Cell.SIZE */ + 2 /* Cell.BG */] |= 268435456 /* BgFlags.HAS_EXTENDED */;\n        line._extendedAttrs[x] = new ExtendedAttrsImage(0, 0, imageId, tileId);\n    }\n    _evictOnAlternate() {\n        var _a, _b;\n        // nullify tile count of all images on alternate buffer\n        for (const spec of this._images.values()) {\n            if (spec.bufferType === 'alternate') {\n                spec.tileCount = 0;\n            }\n        }\n        // re-count tiles on whole buffer\n        const buffer = this._terminal._core.buffer;\n        for (let y = 0; y < this._terminal.rows; ++y) {\n            const line = buffer.lines.get(y);\n            if (!line) {\n                continue;\n            }\n            for (let x = 0; x < this._terminal.cols; ++x) {\n                if (line._data[x * 3 /* Cell.SIZE */ + 2 /* Cell.BG */] & 268435456 /* BgFlags.HAS_EXTENDED */) {\n                    const imgId = (_a = line._extendedAttrs[x]) === null || _a === void 0 ? void 0 : _a.imageId;\n                    if (imgId) {\n                        const spec = this._images.get(imgId);\n                        if (spec) {\n                            spec.tileCount++;\n                        }\n                    }\n                }\n            }\n        }\n        // deleted images with zero tile count\n        const zero = [];\n        for (const [id, spec] of this._images.entries()) {\n            if (spec.bufferType === 'alternate' && !spec.tileCount) {\n                (_b = spec.marker) === null || _b === void 0 ? void 0 : _b.dispose();\n                zero.push(id);\n            }\n        }\n        for (const id of zero) {\n            this._delImg(id);\n        }\n    }\n}\n//# sourceMappingURL=ImageStorage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nconst inwasm_1 = require(\"inwasm\");\n/**\n * wasm base64 decoder.\n */\nconst wasmDecode = (0, inwasm_1.InWasm)(/*inwasm#6ccf778dadd2ee40:rdef-start:\"decode\"*/{s:1,t:0,d:'AGFzbQEAAAABBQFgAAF/Ag8BA2VudgZtZW1vcnkCAAEDAwIAAAcNAgNkZWMAAANlbmQAAQqxAwKuAQEFf0GIKCgCAEGgKGohAUGEKCgCACIAQYAoKAIAQQFrQXxxIgJIBEAgAkGgKGohAyAAQaAoaiEAA0AgAC0AA0ECdCgCgCAgAC0AAkECdCgCgBggAC0AAUECdCgCgBAgAC0AAEECdCgCgAhycnIiBEH///8HSwRAQQEPCyABIAQ2AgAgAUEDaiEBIABBBGoiACADSQ0ACwtBhCggAjYCAEGIKCABQaAoazYCAEEAC/4BAQZ/AkBBgCgoAgAiAUGEKCgCACIAa0EFTgRAQQEhAxAADQFBgCgoAgAhAUGEKCgCACEAC0EBIQMgASAAayIEQQJIDQAgAEGhKGotAABBAnQoAoAQIABBoChqLQAAQQJ0KAKACHIhAQJAIARBAkYEQEEBIQIMAQtBASECIAAtAKIoIgVBPUcEQEECIQIgBUECdCgCgBggAXIhAQsgBEEERw0AIAAtAKMoIgBBPUYNACACQQFqIQIgAEECdCgCgCAgAXIhAQsgAUH///8HSw0AQYgoKAIAQaAoaiABNgIAQYgoQYgoKAIAIAJqIgA2AgAgAEGQKCgCAEchAwsgAwsAdglwcm9kdWNlcnMBDHByb2Nlc3NlZC1ieQEFY2xhbmdWMTguMC4wIChodHRwczovL2dpdGh1Yi5jb20vbGx2bS9sbHZtLXByb2plY3QgZDFlNjg1ZGY0NWRjNTk0NGI0M2QyNTQ3ZDAxMzhjZDRhM2VlNGVmZSkALA90YXJnZXRfZmVhdHVyZXMCKw9tdXRhYmxlLWdsb2JhbHMrCHNpZ24tZXh0'}/*inwasm#6ccf778dadd2ee40:rdef-end:\"decode\"*/);\n// base64 map\nconst MAP = new Uint8Array('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    .split('')\n    .map(el => el.charCodeAt(0)));\n// init decoder maps in LE order\nconst D = new Uint32Array(1024);\nD.fill(0xFF000000);\nfor (let i = 0; i < MAP.length; ++i)\n    D[MAP[i]] = i << 2;\nfor (let i = 0; i < MAP.length; ++i)\n    D[256 + MAP[i]] = i >> 4 | ((i << 4) & 0xFF) << 8;\nfor (let i = 0; i < MAP.length; ++i)\n    D[512 + MAP[i]] = (i >> 2) << 8 | ((i << 6) & 0xFF) << 16;\nfor (let i = 0; i < MAP.length; ++i)\n    D[768 + MAP[i]] = i << 16;\nconst EMPTY = new Uint8Array(0);\n/**\n * base64 streamline inplace decoder.\n *\n * Features / assumptions:\n * - optimized uint32 read/write (only LE support!)\n * - lazy chunkwise decoding\n * - errors out on any non base64 chars (no support for NL formatted base64)\n * - decodes in wasm\n * - inplace decoding to save memory\n * - supports a keepSize for lazy memory release\n */\nclass Base64Decoder {\n    constructor(keepSize) {\n        this.keepSize = keepSize;\n    }\n    /**\n     * Currently decoded bytes (borrowed).\n     * Must be accessed before calling `release` or `init`.\n     */\n    get data8() {\n        return this._inst ? this._d.subarray(0, this._m32[1282 /* P32.STATE_DP */]) : EMPTY;\n    }\n    /**\n     * Release memory conditionally based on `keepSize`.\n     * If memory gets released, also the wasm instance will be freed and recreated on next `init`,\n     * otherwise the instance will be reused.\n     */\n    release() {\n        if (!this._inst)\n            return;\n        if (this._mem.buffer.byteLength > this.keepSize) {\n            this._inst = this._m32 = this._d = this._mem = null;\n        }\n        else {\n            this._m32[1280 /* P32.STATE_WP */] = 0;\n            this._m32[1281 /* P32.STATE_SP */] = 0;\n            this._m32[1282 /* P32.STATE_DP */] = 0;\n        }\n    }\n    /**\n     * Initializes the decoder for new base64 data.\n     * Must be called before doing any decoding attempts.\n     * `size` is the amount of decoded bytes to be expected.\n     * The method will either spawn a new wasm instance or grow\n     * the needed memory of an existing instance.\n     */\n    init(size) {\n        let m = this._m32;\n        const bytes = (Math.ceil(size / 3) + 1288 /* P32.STATE_DATA */) * 4;\n        if (!this._inst) {\n            this._mem = new WebAssembly.Memory({ initial: Math.ceil(bytes / 65536) });\n            this._inst = wasmDecode({ env: { memory: this._mem } });\n            m = new Uint32Array(this._mem.buffer, 0);\n            m.set(D, 256 /* P32.D0 */);\n            this._d = new Uint8Array(this._mem.buffer, 1288 /* P32.STATE_DATA */ * 4);\n        }\n        else if (this._mem.buffer.byteLength < bytes) {\n            this._mem.grow(Math.ceil((bytes - this._mem.buffer.byteLength) / 65536));\n            m = new Uint32Array(this._mem.buffer, 0);\n            this._d = new Uint8Array(this._mem.buffer, 1288 /* P32.STATE_DATA */ * 4);\n        }\n        m[1284 /* P32.STATE_BSIZE */] = size;\n        m[1283 /* P32.STATE_ESIZE */] = Math.ceil(size / 3) * 4;\n        m[1280 /* P32.STATE_WP */] = 0;\n        m[1281 /* P32.STATE_SP */] = 0;\n        m[1282 /* P32.STATE_DP */] = 0;\n        this._m32 = m;\n    }\n    /**\n     * Put bytes in `data` from `start` to `end` (exclusive) into the decoder.\n     * Also decodes base64 data inplace once the payload exceeds 2^17 bytes.\n     * Returns 1 on error, else 0.\n     */\n    put(data, start, end) {\n        if (!this._inst)\n            return 1;\n        const m = this._m32;\n        if (end - start + m[1280 /* P32.STATE_WP */] > m[1283 /* P32.STATE_ESIZE */])\n            return 1;\n        this._d.set(data.subarray(start, end), m[1280 /* P32.STATE_WP */]);\n        m[1280 /* P32.STATE_WP */] += end - start;\n        // max chunk in input handler is 2^17, try to run in \"tandem mode\"\n        // also assures that we dont run into illegal offsets in the wasm part\n        return m[1280 /* P32.STATE_WP */] - m[1281 /* P32.STATE_SP */] >= 131072 ? this._inst.exports.dec() : 0;\n    }\n    /**\n     * End the current decoding.\n     * Decodes leftover payload and finally checks for the correct amount of\n     * decoded bytes by comparing to the value given to `init`.\n     * Returns 1 on error, else 0.\n     */\n    end() {\n        return this._inst ? this._inst.exports.end() : 1;\n    }\n}\nexports.default = Base64Decoder;\n//# sourceMappingURL=Base64Decoder.wasm.js.map","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n// field value decoders\n// ASCII bytes to string\nfunction toStr(data) {\n    let s = '';\n    for (let i = 0; i < data.length; ++i) {\n        s += String.fromCharCode(data[i]);\n    }\n    return s;\n}\n// digits to integer\nfunction toInt(data) {\n    let v = 0;\n    for (let i = 0; i < data.length; ++i) {\n        if (data[i] < 48 || data[i] > 57) {\n            throw new Error('illegal char');\n        }\n        v = v * 10 + data[i] - 48;\n    }\n    return v;\n}\n// check for correct size entry\nfunction toSize(data) {\n    const v = toStr(data);\n    if (!v.match(/^((auto)|(\\d+?((px)|(%)){0,1}))$/)) {\n        throw new Error('illegal size');\n    }\n    return v;\n}\n// name is base64 encoded utf-8\nfunction toName(data) {\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(toStr(data), 'base64').toString();\n    }\n    const bs = atob(toStr(data));\n    const b = new Uint8Array(bs.length);\n    for (let i = 0; i < b.length; ++i) {\n        b[i] = bs.charCodeAt(i);\n    }\n    return new TextDecoder().decode(b);\n}\nconst DECODERS = {\n    inline: toInt,\n    size: toInt,\n    name: toName,\n    width: toSize,\n    height: toSize,\n    preserveAspectRatio: toInt\n};\nconst FILE_MARKER = [70, 105, 108, 101];\nconst MAX_FIELDCHARS = 1024;\nexport class HeaderParser {\n    constructor() {\n        this.state = 0 /* HeaderState.START */;\n        this._buffer = new Uint32Array(MAX_FIELDCHARS);\n        this._position = 0;\n        this._key = '';\n        this.fields = {};\n    }\n    reset() {\n        this._buffer.fill(0);\n        this.state = 0 /* HeaderState.START */;\n        this._position = 0;\n        this.fields = {};\n        this._key = '';\n    }\n    parse(data, start, end) {\n        let state = this.state;\n        let pos = this._position;\n        const buffer = this._buffer;\n        if (state === 1 /* HeaderState.ABORT */ || state === 4 /* HeaderState.END */)\n            return -1;\n        if (state === 0 /* HeaderState.START */ && pos > 6)\n            return -1;\n        for (let i = start; i < end; ++i) {\n            const c = data[i];\n            switch (c) {\n                case 59: // ;\n                    if (!this._storeValue(pos))\n                        return this._a();\n                    state = 2 /* HeaderState.KEY */;\n                    pos = 0;\n                    break;\n                case 61: // =\n                    if (state === 0 /* HeaderState.START */) {\n                        for (let k = 0; k < FILE_MARKER.length; ++k) {\n                            if (buffer[k] !== FILE_MARKER[k])\n                                return this._a();\n                        }\n                        state = 2 /* HeaderState.KEY */;\n                        pos = 0;\n                    }\n                    else if (state === 2 /* HeaderState.KEY */) {\n                        if (!this._storeKey(pos))\n                            return this._a();\n                        state = 3 /* HeaderState.VALUE */;\n                        pos = 0;\n                    }\n                    else if (state === 3 /* HeaderState.VALUE */) {\n                        if (pos >= MAX_FIELDCHARS)\n                            return this._a();\n                        buffer[pos++] = c;\n                    }\n                    break;\n                case 58: // :\n                    if (state === 3 /* HeaderState.VALUE */) {\n                        if (!this._storeValue(pos))\n                            return this._a();\n                    }\n                    this.state = 4 /* HeaderState.END */;\n                    return i + 1;\n                default:\n                    if (pos >= MAX_FIELDCHARS)\n                        return this._a();\n                    buffer[pos++] = c;\n            }\n        }\n        this.state = state;\n        this._position = pos;\n        return -2;\n    }\n    _a() {\n        this.state = 1 /* HeaderState.ABORT */;\n        return -1;\n    }\n    _storeKey(pos) {\n        const k = toStr(this._buffer.subarray(0, pos));\n        if (k) {\n            this._key = k;\n            this.fields[k] = null;\n            return true;\n        }\n        return false;\n    }\n    _storeValue(pos) {\n        if (this._key) {\n            try {\n                const v = this._buffer.slice(0, pos);\n                this.fields[this._key] = DECODERS[this._key] ? DECODERS[this._key](v) : v;\n            }\n            catch (e) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=IIPHeaderParser.js.map","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nexport const UNSUPPORTED_TYPE = {\n    mime: 'unsupported',\n    width: 0,\n    height: 0\n};\nexport function imageType(d) {\n    if (d.length < 24) {\n        return UNSUPPORTED_TYPE;\n    }\n    const d32 = new Uint32Array(d.buffer, d.byteOffset, 6);\n    // PNG: 89 50 4E 47 0D 0A 1A 0A (8 first bytes == magic number for PNG)\n    // + first chunk must be IHDR\n    if (d32[0] === 0x474E5089 && d32[1] === 0x0A1A0A0D && d32[3] === 0x52444849) {\n        return {\n            mime: 'image/png',\n            width: d[16] << 24 | d[17] << 16 | d[18] << 8 | d[19],\n            height: d[20] << 24 | d[21] << 16 | d[22] << 8 | d[23]\n        };\n    }\n    // JPEG: FF D8 FF E0 xx xx JFIF  or  FF D8 FF E1 xx xx Exif 00 00\n    if ((d32[0] === 0xE0FFD8FF || d32[0] === 0xE1FFD8FF)\n        && ((d[6] === 0x4a && d[7] === 0x46 && d[8] === 0x49 && d[9] === 0x46)\n            || (d[6] === 0x45 && d[7] === 0x78 && d[8] === 0x69 && d[9] === 0x66))) {\n        const [width, height] = jpgSize(d);\n        return { mime: 'image/jpeg', width, height };\n    }\n    // GIF: GIF87a or GIF89a\n    if (d32[0] === 0x38464947 && (d[4] === 0x37 || d[4] === 0x39) && d[5] === 0x61) {\n        return {\n            mime: 'image/gif',\n            width: d[7] << 8 | d[6],\n            height: d[9] << 8 | d[8]\n        };\n    }\n    return UNSUPPORTED_TYPE;\n}\nfunction jpgSize(d) {\n    const len = d.length;\n    let i = 4;\n    let blockLength = d[i] << 8 | d[i + 1];\n    while (true) {\n        i += blockLength;\n        if (i >= len) {\n            // exhausted without size info\n            return [0, 0];\n        }\n        if (d[i] !== 0xFF) {\n            return [0, 0];\n        }\n        if (d[i + 1] === 0xC0 || d[i + 1] === 0xC2) {\n            if (i + 8 < len) {\n                return [\n                    d[i + 7] << 8 | d[i + 8],\n                    d[i + 5] << 8 | d[i + 6]\n                ];\n            }\n            return [0, 0];\n        }\n        i += 2;\n        blockLength = d[i] << 8 | d[i + 1];\n    }\n}\n//# sourceMappingURL=IIPMetrics.js.map","import { ImageRenderer } from './ImageRenderer';\nimport { CELL_SIZE_DEFAULT } from './ImageStorage';\nimport * as Base64Decoder from 'xterm-wasm-parts/lib/base64/Base64Decoder.wasm';\nimport { HeaderParser } from './IIPHeaderParser';\nimport { imageType, UNSUPPORTED_TYPE } from './IIPMetrics';\n// limit hold memory in base64 decoder\nconst KEEP_DATA = 4194304;\n// default IIP header values\nconst DEFAULT_HEADER = {\n    name: 'Unnamed file',\n    size: 0,\n    width: 'auto',\n    height: 'auto',\n    preserveAspectRatio: 1,\n    inline: 0\n};\nexport class IIPHandler {\n    constructor(_opts, _renderer, _storage, _coreTerminal) {\n        this._opts = _opts;\n        this._renderer = _renderer;\n        this._storage = _storage;\n        this._coreTerminal = _coreTerminal;\n        this._aborted = false;\n        this._hp = new HeaderParser();\n        this._header = DEFAULT_HEADER;\n        this._dec = new Base64Decoder(KEEP_DATA);\n        this._metrics = UNSUPPORTED_TYPE;\n    }\n    reset() { }\n    start() {\n        this._aborted = false;\n        this._header = DEFAULT_HEADER;\n        this._metrics = UNSUPPORTED_TYPE;\n        this._hp.reset();\n    }\n    put(data, start, end) {\n        if (this._aborted)\n            return;\n        if (this._hp.state === 4 /* HeaderState.END */) {\n            if (this._dec.put(data, start, end)) {\n                this._dec.release();\n                this._aborted = true;\n            }\n        }\n        else {\n            const dataPos = this._hp.parse(data, start, end);\n            if (dataPos === -1) {\n                this._aborted = true;\n                return;\n            }\n            if (dataPos > 0) {\n                this._header = Object.assign({}, DEFAULT_HEADER, this._hp.fields);\n                if (!this._header.inline || !this._header.size || this._header.size > this._opts.iipSizeLimit) {\n                    this._aborted = true;\n                    return;\n                }\n                this._dec.init(this._header.size);\n                if (this._dec.put(data, dataPos, end)) {\n                    this._dec.release();\n                    this._aborted = true;\n                }\n            }\n        }\n    }\n    end(success) {\n        if (this._aborted)\n            return true;\n        let w = 0;\n        let h = 0;\n        // early exit condition chain\n        let cond = true;\n        if (cond = success) {\n            if (cond = !this._dec.end()) {\n                this._metrics = imageType(this._dec.data8);\n                if (cond = this._metrics.mime !== 'unsupported') {\n                    w = this._metrics.width;\n                    h = this._metrics.height;\n                    if (cond = w && h && w * h < this._opts.pixelLimit) {\n                        [w, h] = this._resize(w, h).map(Math.floor);\n                        cond = w && h && w * h < this._opts.pixelLimit;\n                    }\n                }\n            }\n        }\n        if (!cond) {\n            this._dec.release();\n            return true;\n        }\n        const blob = new Blob([this._dec.data8], { type: this._metrics.mime });\n        this._dec.release();\n        if (!window.createImageBitmap) {\n            const url = URL.createObjectURL(blob);\n            const img = new Image();\n            return new Promise(r => {\n                img.addEventListener('load', () => {\n                    var _a;\n                    URL.revokeObjectURL(url);\n                    const canvas = ImageRenderer.createCanvas(window.document, w, h);\n                    (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.drawImage(img, 0, 0, w, h);\n                    this._storage.addImage(canvas);\n                    r(true);\n                });\n                img.src = url;\n                // sanity measure to avoid terminal blocking from dangling promise\n                // happens from corrupt data (onload never gets fired)\n                setTimeout(() => r(true), 1000);\n            });\n        }\n        return createImageBitmap(blob, { resizeWidth: w, resizeHeight: h })\n            .then(bm => {\n            this._storage.addImage(bm);\n            return true;\n        });\n    }\n    _resize(w, h) {\n        var _a, _b, _c, _d;\n        const cw = ((_a = this._renderer.dimensions) === null || _a === void 0 ? void 0 : _a.css.cell.width) || CELL_SIZE_DEFAULT.width;\n        const ch = ((_b = this._renderer.dimensions) === null || _b === void 0 ? void 0 : _b.css.cell.height) || CELL_SIZE_DEFAULT.height;\n        const width = ((_c = this._renderer.dimensions) === null || _c === void 0 ? void 0 : _c.css.canvas.width) || cw * this._coreTerminal.cols;\n        const height = ((_d = this._renderer.dimensions) === null || _d === void 0 ? void 0 : _d.css.canvas.height) || ch * this._coreTerminal.rows;\n        const rw = this._dim(this._header.width, width, cw);\n        const rh = this._dim(this._header.height, height, ch);\n        if (!rw && !rh) {\n            const wf = width / w; // TODO: should this respect initial cursor offset?\n            const hf = (height - ch) / h; // TODO: fix offset issues from float cell height\n            const f = Math.min(wf, hf);\n            return f < 1 ? [w * f, h * f] : [w, h];\n        }\n        return !rw\n            ? [w * rh / h, rh]\n            : this._header.preserveAspectRatio || !rw || !rh\n                ? [rw, h * rw / w] : [rw, rh];\n    }\n    _dim(s, total, cdim) {\n        if (s === 'auto')\n            return 0;\n        if (s.endsWith('%'))\n            return parseInt(s.slice(0, -1)) * total / 100;\n        if (s.endsWith('px'))\n            return parseInt(s.slice(0, -2));\n        return parseInt(s) * cdim;\n    }\n}\n//# sourceMappingURL=IIPHandler.js.map\n","\"use strict\";\n/**\n * Copyright (c) 2021 Joerg Breitbart.\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeAsync = exports.decode = exports.Decoder = exports.DecoderAsync = void 0;\nconst Colors_1 = require(\"./Colors\");\nconst wasm_1 = require(\"./wasm\");\n/* istanbul ignore next */\nfunction decodeBase64(s) {\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(s, 'base64');\n    }\n    const bytestring = atob(s);\n    const result = new Uint8Array(bytestring.length);\n    for (let i = 0; i < result.length; ++i) {\n        result[i] = bytestring.charCodeAt(i);\n    }\n    return result;\n}\nconst WASM_BYTES = decodeBase64(wasm_1.LIMITS.BYTES);\nlet WASM_MODULE;\n// empty canvas\nconst NULL_CANVAS = new Uint32Array();\n// proxy for lazy binding of decoder methods to wasm env callbacks\nclass CallbackProxy {\n    constructor() {\n        this.bandHandler = (width) => 1;\n        this.modeHandler = (mode) => 1;\n    }\n    handle_band(width) {\n        return this.bandHandler(width);\n    }\n    mode_parsed(mode) {\n        return this.modeHandler(mode);\n    }\n}\n// default decoder options\nconst DEFAULT_OPTIONS = {\n    memoryLimit: 2048 * 65536,\n    sixelColor: Colors_1.DEFAULT_FOREGROUND,\n    fillColor: Colors_1.DEFAULT_BACKGROUND,\n    palette: Colors_1.PALETTE_VT340_COLOR,\n    paletteLimit: wasm_1.LIMITS.PALETTE_SIZE,\n    truncate: true\n};\n/**\n * Create a decoder instance asynchronously.\n * To be used in the browser main thread.\n */\nfunction DecoderAsync(opts) {\n    const cbProxy = new CallbackProxy();\n    const importObj = {\n        env: {\n            handle_band: cbProxy.handle_band.bind(cbProxy),\n            mode_parsed: cbProxy.mode_parsed.bind(cbProxy)\n        }\n    };\n    return WebAssembly.instantiate(WASM_MODULE || WASM_BYTES, importObj)\n        .then((inst) => {\n        WASM_MODULE = WASM_MODULE || inst.module;\n        return new Decoder(opts, inst.instance || inst, cbProxy);\n    });\n}\nexports.DecoderAsync = DecoderAsync;\n/**\n * Decoder - web assembly based sixel stream decoder.\n *\n * Usage pattern:\n *  - call `init` to initialize decoder for new image\n *  - feed data chunks to `decode` or `decodeString`\n *  - grab pixels from `data32`\n *  - optional: call `release` to free memory (e.g. after big images)\n *  - start over with next image by calling `init`\n *\n * Properties:\n *  - max width of 2^14 - 4 pixels (compile time setting in wasm)\n *  - no explicit height limit (only limited by memory)\n *  - max 4096 colors palette (compile time setting in wasm)\n *\n * Explanation operation modes:\n * - M1   Mode chosen for level 1 images (no raster attributes),\n *        or for level 2 images with `truncate=false`.\n * - M2   Mode chosen for level 2 images with `truncate=true` (default).\n *        While this mode is not fully spec conform (decoder not expected to truncate),\n *        it is what spec conform encoders should create (should not excess raster).\n *        This mode has several advantages:\n *        - ~15% faster decoding speed\n *        - image dimensions can be evaluated early without processing the whole data\n *        - faster pixel access in `data32` (precalulated)\n *        - image height is not reported as multiple of 6 pixels\n * - M0   Undecided mode state after `init`.\n * The level of an image is determined during early decoding based on the fact,\n * whether the data contains valid raster attributes before any sixel data.\n * Until then the mode of an image is marked as M0, meaning the real operation mode\n * could not be decided yet.\n */\nclass Decoder {\n    /**\n     * Synchonous ctor. Can be called from nodejs or a webworker context.\n     * For instantiation in the browser main thread use `WasmDecoderAsync` instead.\n     */\n    constructor(opts, _instance, _cbProxy) {\n        this._PIXEL_OFFSET = wasm_1.LIMITS.MAX_WIDTH + 4;\n        this._canvas = NULL_CANVAS;\n        this._bandWidths = [];\n        this._maxWidth = 0;\n        this._minWidth = wasm_1.LIMITS.MAX_WIDTH;\n        this._lastOffset = 0;\n        this._currentHeight = 0;\n        this._opts = Object.assign({}, DEFAULT_OPTIONS, opts);\n        if (this._opts.paletteLimit > wasm_1.LIMITS.PALETTE_SIZE) {\n            throw new Error(`DecoderOptions.paletteLimit must not exceed ${wasm_1.LIMITS.PALETTE_SIZE}`);\n        }\n        if (!_instance) {\n            const module = WASM_MODULE || (WASM_MODULE = new WebAssembly.Module(WASM_BYTES));\n            _instance = new WebAssembly.Instance(module, {\n                env: {\n                    handle_band: this._handle_band.bind(this),\n                    mode_parsed: this._initCanvas.bind(this)\n                }\n            });\n        }\n        else {\n            _cbProxy.bandHandler = this._handle_band.bind(this);\n            _cbProxy.modeHandler = this._initCanvas.bind(this);\n        }\n        this._instance = _instance;\n        this._wasm = this._instance.exports;\n        this._chunk = new Uint8Array(this._wasm.memory.buffer, this._wasm.get_chunk_address(), wasm_1.LIMITS.CHUNK_SIZE);\n        this._states = new Uint32Array(this._wasm.memory.buffer, this._wasm.get_state_address(), 12);\n        this._palette = new Uint32Array(this._wasm.memory.buffer, this._wasm.get_palette_address(), wasm_1.LIMITS.PALETTE_SIZE);\n        this._palette.set(this._opts.palette);\n        this._pSrc = new Uint32Array(this._wasm.memory.buffer, this._wasm.get_p0_address());\n        this._wasm.init(Colors_1.DEFAULT_FOREGROUND, 0, this._opts.paletteLimit, 0);\n    }\n    // some readonly parser states for internal usage\n    get _fillColor() { return this._states[0]; }\n    get _truncate() { return this._states[8]; }\n    get _rasterWidth() { return this._states[6]; }\n    get _rasterHeight() { return this._states[7]; }\n    get _width() { return this._states[2] ? this._states[2] - 4 : 0; }\n    get _height() { return this._states[3]; }\n    get _level() { return this._states[9]; }\n    get _mode() { return this._states[10]; }\n    get _paletteLimit() { return this._states[11]; }\n    _initCanvas(mode) {\n        if (mode === 2 /* M2 */) {\n            const pixels = this.width * this.height;\n            if (pixels > this._canvas.length) {\n                if (this._opts.memoryLimit && pixels * 4 > this._opts.memoryLimit) {\n                    this.release();\n                    throw new Error('image exceeds memory limit');\n                }\n                this._canvas = new Uint32Array(pixels);\n            }\n            this._maxWidth = this._width;\n        }\n        else if (mode === 1 /* M1 */) {\n            if (this._level === 2) {\n                // got raster attributes, use them as initial size hint\n                const pixels = Math.min(this._rasterWidth, wasm_1.LIMITS.MAX_WIDTH) * this._rasterHeight;\n                if (pixels > this._canvas.length) {\n                    if (this._opts.memoryLimit && pixels * 4 > this._opts.memoryLimit) {\n                        this.release();\n                        throw new Error('image exceeds memory limit');\n                    }\n                    this._canvas = new Uint32Array(pixels);\n                }\n            }\n            else {\n                // else fallback to generic resizing, starting with 256*256 pixels\n                if (this._canvas.length < 65536) {\n                    this._canvas = new Uint32Array(65536);\n                }\n            }\n        }\n        return 0; // 0 - continue, 1 - abort right away\n    }\n    _realloc(offset, additionalPixels) {\n        const pixels = offset + additionalPixels;\n        if (pixels > this._canvas.length) {\n            if (this._opts.memoryLimit && pixels * 4 > this._opts.memoryLimit) {\n                this.release();\n                throw new Error('image exceeds memory limit');\n            }\n            // extend in 65536 pixel blocks\n            const newCanvas = new Uint32Array(Math.ceil(pixels / 65536) * 65536);\n            newCanvas.set(this._canvas);\n            this._canvas = newCanvas;\n        }\n    }\n    _handle_band(width) {\n        const adv = this._PIXEL_OFFSET;\n        let offset = this._lastOffset;\n        if (this._mode === 2 /* M2 */) {\n            let remaining = this.height - this._currentHeight;\n            let c = 0;\n            while (c < 6 && remaining > 0) {\n                this._canvas.set(this._pSrc.subarray(adv * c, adv * c + width), offset + width * c);\n                c++;\n                remaining--;\n            }\n            this._lastOffset += width * c;\n            this._currentHeight += c;\n        }\n        else if (this._mode === 1 /* M1 */) {\n            this._realloc(offset, width * 6);\n            this._maxWidth = Math.max(this._maxWidth, width);\n            this._minWidth = Math.min(this._minWidth, width);\n            for (let i = 0; i < 6; ++i) {\n                this._canvas.set(this._pSrc.subarray(adv * i, adv * i + width), offset + width * i);\n            }\n            this._bandWidths.push(width);\n            this._lastOffset += width * 6;\n            this._currentHeight += 6;\n        }\n        return 0; // 0 - continue, 1 - abort right away\n    }\n    /**\n     * Width of the image data.\n     * Returns the rasterWidth in level2/truncating mode,\n     * otherwise the max width, that has been seen so far.\n     */\n    get width() {\n        return this._mode !== 1 /* M1 */\n            ? this._width\n            : Math.max(this._maxWidth, this._wasm.current_width());\n    }\n    /**\n     * Height of the image data.\n     * Returns the rasterHeight in level2/truncating mode,\n     * otherwise height touched by sixels.\n     */\n    get height() {\n        return this._mode !== 1 /* M1 */\n            ? this._height\n            : this._wasm.current_width()\n                ? this._bandWidths.length * 6 + this._wasm.current_height()\n                : this._bandWidths.length * 6;\n    }\n    /**\n     * Get active palette colors as RGBA8888[] (borrowed).\n     */\n    get palette() {\n        return this._palette.subarray(0, this._paletteLimit);\n    }\n    /**\n     * Get the memory used by the decoder.\n     *\n     * This is a rough estimate accounting the wasm instance memory\n     * and pixel buffers held on JS side (real value will be slightly\n     * higher due to JS book-keeping).\n     * Note that the decoder does not free ressources on its own,\n     * call `release` to free excess memory.\n     */\n    get memoryUsage() {\n        return this._canvas.byteLength + this._wasm.memory.buffer.byteLength + 8 * this._bandWidths.length;\n    }\n    /**\n     * Get various properties of the decoder and the current image.\n     */\n    get properties() {\n        return {\n            width: this.width,\n            height: this.height,\n            mode: this._mode,\n            level: this._level,\n            truncate: !!this._truncate,\n            paletteLimit: this._paletteLimit,\n            fillColor: this._fillColor,\n            memUsage: this.memoryUsage,\n            rasterAttributes: {\n                numerator: this._states[4],\n                denominator: this._states[5],\n                width: this._rasterWidth,\n                height: this._rasterHeight,\n            }\n        };\n    }\n    /**\n     * Initialize decoder for next image. Must be called before\n     * any calls to `decode` or `decodeString`.\n     */\n    // FIXME: reorder arguments, better palette handling\n    init(fillColor = this._opts.fillColor, palette = this._opts.palette, paletteLimit = this._opts.paletteLimit, truncate = this._opts.truncate) {\n        this._wasm.init(this._opts.sixelColor, fillColor, paletteLimit, truncate ? 1 : 0);\n        if (palette) {\n            this._palette.set(palette.subarray(0, wasm_1.LIMITS.PALETTE_SIZE));\n        }\n        this._bandWidths.length = 0;\n        this._maxWidth = 0;\n        this._minWidth = wasm_1.LIMITS.MAX_WIDTH;\n        this._lastOffset = 0;\n        this._currentHeight = 0;\n    }\n    /**\n     * Decode next chunk of data from start to end index (exclusive).\n     * @throws Will throw if the image exceeds the memory limit.\n     */\n    decode(data, start = 0, end = data.length) {\n        let p = start;\n        while (p < end) {\n            const length = Math.min(end - p, wasm_1.LIMITS.CHUNK_SIZE);\n            this._chunk.set(data.subarray(p, p += length));\n            this._wasm.decode(0, length);\n        }\n    }\n    /**\n     * Decode next chunk of string data from start to end index (exclusive).\n     * Note: Decoding from string data is rather slow, use `decode` with byte data instead.\n     * @throws Will throw if the image exceeds the memory limit.\n     */\n    decodeString(data, start = 0, end = data.length) {\n        let p = start;\n        while (p < end) {\n            const length = Math.min(end - p, wasm_1.LIMITS.CHUNK_SIZE);\n            for (let i = 0, j = p; i < length; ++i, ++j) {\n                this._chunk[i] = data.charCodeAt(j);\n            }\n            p += length;\n            this._wasm.decode(0, length);\n        }\n    }\n    /**\n     * Get current pixel data as 32-bit typed array (RGBA8888).\n     * Also peeks into pixel data of the current band, that got not pushed yet.\n     */\n    get data32() {\n        if (this._mode === 0 /* M0 */ || !this.width || !this.height) {\n            return NULL_CANVAS;\n        }\n        // get width of pending band to peek into left-over data\n        const currentWidth = this._wasm.current_width();\n        if (this._mode === 2 /* M2 */) {\n            let remaining = this.height - this._currentHeight;\n            if (remaining > 0) {\n                const adv = this._PIXEL_OFFSET;\n                let offset = this._lastOffset;\n                let c = 0;\n                while (c < 6 && remaining > 0) {\n                    this._canvas.set(this._pSrc.subarray(adv * c, adv * c + currentWidth), offset + currentWidth * c);\n                    c++;\n                    remaining--;\n                }\n                if (remaining) {\n                    this._canvas.fill(this._fillColor, offset + currentWidth * c);\n                }\n            }\n            return this._canvas.subarray(0, this.width * this.height);\n        }\n        if (this._mode === 1 /* M1 */) {\n            if (this._minWidth === this._maxWidth) {\n                let escape = false;\n                if (currentWidth) {\n                    if (currentWidth !== this._minWidth) {\n                        escape = true;\n                    }\n                    else {\n                        const adv = this._PIXEL_OFFSET;\n                        let offset = this._lastOffset;\n                        this._realloc(offset, currentWidth * 6);\n                        for (let i = 0; i < 6; ++i) {\n                            this._canvas.set(this._pSrc.subarray(adv * i, adv * i + currentWidth), offset + currentWidth * i);\n                        }\n                    }\n                }\n                if (!escape) {\n                    return this._canvas.subarray(0, this.width * this.height);\n                }\n            }\n            // worst case: re-align pixels if we have bands with different width\n            // This is somewhat allocation intensive, any way to do that in-place, and just once?\n            const final = new Uint32Array(this.width * this.height);\n            final.fill(this._fillColor);\n            let finalOffset = 0;\n            let start = 0;\n            for (let i = 0; i < this._bandWidths.length; ++i) {\n                const bw = this._bandWidths[i];\n                for (let p = 0; p < 6; ++p) {\n                    final.set(this._canvas.subarray(start, start += bw), finalOffset);\n                    finalOffset += this.width;\n                }\n            }\n            // also handle left-over pixels of the current band\n            if (currentWidth) {\n                const adv = this._PIXEL_OFFSET;\n                // other than finished bands, this runs only up to currentHeight\n                const currentHeight = this._wasm.current_height();\n                for (let i = 0; i < currentHeight; ++i) {\n                    final.set(this._pSrc.subarray(adv * i, adv * i + currentWidth), finalOffset + this.width * i);\n                }\n            }\n            return final;\n        }\n        // fallthrough for all not handled cases\n        return NULL_CANVAS;\n    }\n    /**\n     * Same as `data32`, but returning pixel data as Uint8ClampedArray suitable\n     * for direct usage with `ImageData`.\n     */\n    get data8() {\n        return new Uint8ClampedArray(this.data32.buffer, 0, this.width * this.height * 4);\n    }\n    /**\n     * Release image ressources on JS side held by the decoder.\n     *\n     * The decoder tries to re-use memory ressources of a previous image\n     * to lower allocation and GC pressure. Decoding a single big image\n     * will grow the memory usage of the decoder permanently.\n     * Call `release` to reset the internal buffers and free the memory.\n     * Note that this destroys the image data, call it when done processing\n     * a rather big image, otherwise it is not needed. Use `memoryUsage`\n     * to decide, whether the held memory is still within your limits.\n     * This does not affect the wasm module (operates on static memory).\n     */\n    release() {\n        this._canvas = NULL_CANVAS;\n        this._bandWidths.length = 0;\n        this._maxWidth = 0;\n        this._minWidth = wasm_1.LIMITS.MAX_WIDTH;\n        // also nullify parser states in wasm to avoid\n        // width/height reporting potential out-of-bound values\n        this._wasm.init(Colors_1.DEFAULT_FOREGROUND, 0, this._opts.paletteLimit, 0);\n    }\n}\nexports.Decoder = Decoder;\n/**\n * Convenient decoding functions for easier usage.\n *\n * These can be used for casual decoding of sixel images,\n * that dont come in as stream chunks.\n * Note that the functions instantiate a stream decoder for every call,\n * which comes with a performance penalty of ~25%.\n */\n/**\n * Decode function with synchronous wasm loading.\n * Can be used in a web worker or in nodejs. Does not work reliable in normal browser context.\n * @throws Will throw if the image exceeds the memory limit.\n */\nfunction decode(data, opts) {\n    const dec = new Decoder(opts);\n    dec.init();\n    typeof data === 'string' ? dec.decodeString(data) : dec.decode(data);\n    return {\n        width: dec.width,\n        height: dec.height,\n        data32: dec.data32,\n        data8: dec.data8\n    };\n}\nexports.decode = decode;\n/**\n * Decode function with asynchronous wasm loading.\n * Use this version in normal browser context.\n * @throws Will throw if the image exceeds the memory limit.\n */\nasync function decodeAsync(data, opts) {\n    const dec = await DecoderAsync(opts);\n    dec.init();\n    typeof data === 'string' ? dec.decodeString(data) : dec.decode(data);\n    return {\n        width: dec.width,\n        height: dec.height,\n        data32: dec.data32,\n        data8: dec.data8\n    };\n}\nexports.decodeAsync = decodeAsync;\n//# sourceMappingURL=Decoder.js.map","/**\n * Copyright (c) 2020, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport * as Colors from 'sixel/lib/Colors';\nconst { toRGBA8888, BIG_ENDIAN, PALETTE_ANSI_256, PALETTE_VT340_COLOR } = Colors;\nimport { ImageRenderer } from './ImageRenderer';\nimport * as Decoder from 'sixel/lib/Decoder';\nconst DecoderAsync = Decoder.DecoderAsync;\n// always free decoder ressources after decoding if it exceeds this limit\nconst MEM_PERMA_LIMIT = 4194304; // 1024 pixels * 1024 pixels * 4 channels = 4MB\n// custom default palette: VT340 (lower 16 colors) + ANSI256 (up to 256) + zeroed (up to 4096)\nconst DEFAULT_PALETTE = PALETTE_ANSI_256;\nDEFAULT_PALETTE.set(PALETTE_VT340_COLOR);\nexport class SixelHandler {\n    constructor(_opts, _storage, _coreTerminal) {\n        this._opts = _opts;\n        this._storage = _storage;\n        this._coreTerminal = _coreTerminal;\n        this._size = 0;\n        this._aborted = false;\n        DecoderAsync({\n            memoryLimit: this._opts.pixelLimit * 4,\n            palette: DEFAULT_PALETTE,\n            paletteLimit: this._opts.sixelPaletteLimit\n        }).then(d => this._dec = d);\n    }\n    reset() {\n        /**\n         * reset sixel decoder to defaults:\n         * - release all memory\n         * - nullify palette (4096)\n         * - apply default palette (256)\n         */\n        if (this._dec) {\n            this._dec.release();\n            // FIXME: missing interface on decoder to nullify full palette\n            this._dec._palette.fill(0);\n            this._dec.init(0, DEFAULT_PALETTE, this._opts.sixelPaletteLimit);\n        }\n    }\n    hook(params) {\n        var _a;\n        this._size = 0;\n        this._aborted = false;\n        if (this._dec) {\n            const fillColor = params.params[1] === 1 ? 0 : extractActiveBg(this._coreTerminal._core._inputHandler._curAttrData, (_a = this._coreTerminal._core._themeService) === null || _a === void 0 ? void 0 : _a.colors);\n            this._dec.init(fillColor, null, this._opts.sixelPaletteLimit);\n        }\n    }\n    put(data, start, end) {\n        if (this._aborted || !this._dec) {\n            return;\n        }\n        this._size += end - start;\n        if (this._size > this._opts.sixelSizeLimit) {\n            console.warn(`SIXEL: too much data, aborting`);\n            this._aborted = true;\n            this._dec.release();\n            return;\n        }\n        try {\n            this._dec.decode(data, start, end);\n        }\n        catch (e) {\n            console.warn(`SIXEL: error while decoding image - ${e}`);\n            this._aborted = true;\n            this._dec.release();\n        }\n    }\n    unhook(success) {\n        var _a;\n        if (this._aborted || !success || !this._dec) {\n            return true;\n        }\n        const width = this._dec.width;\n        const height = this._dec.height;\n        // partial fix for https://github.com/jerch/xterm-addon-image/issues/37\n        if (!width || !height) {\n            if (height) {\n                this._storage.advanceCursor(height);\n            }\n            return true;\n        }\n        const canvas = ImageRenderer.createCanvas(undefined, width, height);\n        (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.putImageData(new ImageData(this._dec.data8, width, height), 0, 0);\n        if (this._dec.memoryUsage > MEM_PERMA_LIMIT) {\n            this._dec.release();\n        }\n        this._storage.addImage(canvas);\n        return true;\n    }\n}\n/**\n * Some helpers to extract current terminal colors.\n */\n// get currently active background color from terminal\n// also respect INVERSE setting\nfunction extractActiveBg(attr, colors) {\n    let bg = 0;\n    if (!colors) {\n        // FIXME: theme service is prolly not available yet,\n        // happens if .open() was not called yet (bug in core?)\n        return bg;\n    }\n    if (attr.isInverse()) {\n        if (attr.isFgDefault()) {\n            bg = convertLe(colors.foreground.rgba);\n        }\n        else if (attr.isFgRGB()) {\n            const t = attr.constructor.toColorRGB(attr.getFgColor());\n            bg = toRGBA8888(...t);\n        }\n        else {\n            bg = convertLe(colors.ansi[attr.getFgColor()].rgba);\n        }\n    }\n    else {\n        if (attr.isBgDefault()) {\n            bg = convertLe(colors.background.rgba);\n        }\n        else if (attr.isBgRGB()) {\n            const t = attr.constructor.toColorRGB(attr.getBgColor());\n            bg = toRGBA8888(...t);\n        }\n        else {\n            bg = convertLe(colors.ansi[attr.getBgColor()].rgba);\n        }\n    }\n    return bg;\n}\n// rgba values on the color managers are always in BE, thus convert to LE\nfunction convertLe(color) {\n    if (BIG_ENDIAN)\n        return color;\n    return (color & 0xFF) << 24 | (color >>> 8 & 0xFF) << 16 | (color >>> 16 & 0xFF) << 8 | color >>> 24 & 0xFF;\n}\n//# sourceMappingURL=SixelHandler.js.map\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IIPHandler } from './IIPHandler';\nimport { ImageRenderer } from './ImageRenderer';\nimport { ImageStorage, CELL_SIZE_DEFAULT } from './ImageStorage';\nimport { SixelHandler } from './SixelHandler';\n// default values of addon ctor options\nconst DEFAULT_OPTIONS = {\n    enableSizeReports: true,\n    pixelLimit: 16777216,\n    sixelSupport: true,\n    sixelScrolling: true,\n    sixelPaletteLimit: 256,\n    sixelSizeLimit: 25000000,\n    storageLimit: 128,\n    showPlaceholder: true,\n    iipSupport: true,\n    iipSizeLimit: 20000000\n};\n// max palette size supported by the sixel lib (compile time setting)\nconst MAX_SIXEL_PALETTE_SIZE = 4096;\nexport class ImageAddon {\n    constructor(opts) {\n        this._disposables = [];\n        this._handlers = new Map();\n        this._opts = Object.assign({}, DEFAULT_OPTIONS, opts);\n        this._defaultOpts = Object.assign({}, DEFAULT_OPTIONS, opts);\n    }\n    dispose() {\n        for (const obj of this._disposables) {\n            obj.dispose();\n        }\n        this._disposables.length = 0;\n        this._handlers.clear();\n    }\n    _disposeLater(...args) {\n        for (const obj of args) {\n            this._disposables.push(obj);\n        }\n    }\n    activate(terminal) {\n        this._terminal = terminal;\n        // internal data structures\n        this._renderer = new ImageRenderer(terminal);\n        this._storage = new ImageStorage(terminal, this._renderer, this._opts);\n        // enable size reports\n        if (this._opts.enableSizeReports) {\n            // const windowOptions = terminal.getOption('windowOptions');\n            // windowOptions.getWinSizePixels = true;\n            // windowOptions.getCellSizePixels = true;\n            // windowOptions.getWinSizeChars = true;\n            // terminal.setOption('windowOptions', windowOptions);\n            const windowOps = terminal.options.windowOptions || {};\n            windowOps.getWinSizePixels = true;\n            windowOps.getCellSizePixels = true;\n            windowOps.getWinSizeChars = true;\n            terminal.options.windowOptions = windowOps;\n        }\n        this._disposeLater(this._renderer, this._storage, \n        // DECSET/DECRST/DA1/XTSMGRAPHICS handlers\n        terminal.parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this._decset(params)), terminal.parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this._decrst(params)), terminal.parser.registerCsiHandler({ final: 'c' }, params => this._da1(params)), terminal.parser.registerCsiHandler({ prefix: '?', final: 'S' }, params => this._xtermGraphicsAttributes(params)), \n        // render hook\n        terminal.onRender(range => { var _a; return (_a = this._storage) === null || _a === void 0 ? void 0 : _a.render(range); }), \n        /**\n         * reset handlers covered:\n         * - DECSTR\n         * - RIS\n         * - Terminal.reset()\n         */\n        terminal.parser.registerCsiHandler({ intermediates: '!', final: 'p' }, () => this.reset()), terminal.parser.registerEscHandler({ final: 'c' }, () => this.reset()), terminal._core._inputHandler.onRequestReset(() => this.reset()), \n        // wipe canvas and delete alternate images on buffer switch\n        terminal.buffer.onBufferChange(() => { var _a; return (_a = this._storage) === null || _a === void 0 ? void 0 : _a.wipeAlternate(); }), \n        // extend images to the right on resize\n        terminal.onResize(metrics => { var _a; return (_a = this._storage) === null || _a === void 0 ? void 0 : _a.viewportResize(metrics); }));\n        // SIXEL handler\n        if (this._opts.sixelSupport) {\n            const sixelHandler = new SixelHandler(this._opts, this._storage, terminal);\n            this._handlers.set('sixel', sixelHandler);\n            this._disposeLater(terminal._core._inputHandler._parser.registerDcsHandler({ final: 'q' }, sixelHandler));\n        }\n        // iTerm IIP handler\n        if (this._opts.iipSupport) {\n            const iipHandler = new IIPHandler(this._opts, this._renderer, this._storage, terminal);\n            this._handlers.set('iip', iipHandler);\n            this._disposeLater(terminal._core._inputHandler._parser.registerOscHandler(1337, iipHandler));\n        }\n    }\n    // Note: storageLimit is skipped here to not intoduce a surprising side effect.\n    reset() {\n        var _a;\n        // reset options customizable by sequences to defaults\n        this._opts.sixelScrolling = this._defaultOpts.sixelScrolling;\n        this._opts.sixelPaletteLimit = this._defaultOpts.sixelPaletteLimit;\n        // also clear image storage\n        (_a = this._storage) === null || _a === void 0 ? void 0 : _a.reset();\n        // reset protocol handlers\n        for (const handler of this._handlers.values()) {\n            handler.reset();\n        }\n        return false;\n    }\n    get storageLimit() {\n        var _a;\n        return ((_a = this._storage) === null || _a === void 0 ? void 0 : _a.getLimit()) || -1;\n    }\n    set storageLimit(limit) {\n        var _a;\n        (_a = this._storage) === null || _a === void 0 ? void 0 : _a.setLimit(limit);\n        this._opts.storageLimit = limit;\n    }\n    get storageUsage() {\n        if (this._storage) {\n            return this._storage.getUsage();\n        }\n        return -1;\n    }\n    get showPlaceholder() {\n        return this._opts.showPlaceholder;\n    }\n    set showPlaceholder(value) {\n        var _a;\n        this._opts.showPlaceholder = value;\n        (_a = this._renderer) === null || _a === void 0 ? void 0 : _a.showPlaceholder(value);\n    }\n    getImageAtBufferCell(x, y) {\n        var _a;\n        return (_a = this._storage) === null || _a === void 0 ? void 0 : _a.getImageAtBufferCell(x, y);\n    }\n    extractTileAtBufferCell(x, y) {\n        var _a;\n        return (_a = this._storage) === null || _a === void 0 ? void 0 : _a.extractTileAtBufferCell(x, y);\n    }\n    _report(s) {\n        var _a;\n        (_a = this._terminal) === null || _a === void 0 ? void 0 : _a._core.coreService.triggerDataEvent(s);\n    }\n    _decset(params) {\n        for (let i = 0; i < params.length; ++i) {\n            switch (params[i]) {\n                case 80:\n                    this._opts.sixelScrolling = false;\n                    break;\n            }\n        }\n        return false;\n    }\n    _decrst(params) {\n        for (let i = 0; i < params.length; ++i) {\n            switch (params[i]) {\n                case 80:\n                    this._opts.sixelScrolling = true;\n                    break;\n            }\n        }\n        return false;\n    }\n    // overload DA to return something more appropriate\n    _da1(params) {\n        if (params[0]) {\n            return true;\n        }\n        // reported features:\n        // 62 - VT220\n        // 4 - SIXEL support\n        // 9 - charsets\n        // 22 - ANSI colors\n        if (this._opts.sixelSupport) {\n            this._report(`\\x1b[?62;4;9;22c`);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Implementation of xterm's graphics attribute sequence.\n     *\n     * Supported features:\n     * - read/change palette limits (max 4096 by sixel lib)\n     * - read SIXEL canvas geometry (reports current window canvas or\n     *   squared pixelLimit if canvas > pixel limit)\n     *\n     * Everything else is deactivated.\n     */\n    _xtermGraphicsAttributes(params) {\n        var _a, _b, _c, _d, _e, _f;\n        if (params.length < 2) {\n            return true;\n        }\n        if (params[0] === 1 /* GaItem.COLORS */) {\n            switch (params[1]) {\n                case 1 /* GaAction.READ */:\n                    this._report(`\\x1b[?${params[0]};${0 /* GaStatus.SUCCESS */};${this._opts.sixelPaletteLimit}S`);\n                    return true;\n                case 2 /* GaAction.SET_DEFAULT */:\n                    this._opts.sixelPaletteLimit = this._defaultOpts.sixelPaletteLimit;\n                    this._report(`\\x1b[?${params[0]};${0 /* GaStatus.SUCCESS */};${this._opts.sixelPaletteLimit}S`);\n                    // also reset protocol handlers for now\n                    for (const handler of this._handlers.values()) {\n                        handler.reset();\n                    }\n                    return true;\n                case 3 /* GaAction.SET */:\n                    if (params.length > 2 && !(params[2] instanceof Array) && params[2] <= MAX_SIXEL_PALETTE_SIZE) {\n                        this._opts.sixelPaletteLimit = params[2];\n                        this._report(`\\x1b[?${params[0]};${0 /* GaStatus.SUCCESS */};${this._opts.sixelPaletteLimit}S`);\n                    }\n                    else {\n                        this._report(`\\x1b[?${params[0]};${2 /* GaStatus.ACTION_ERROR */}S`);\n                    }\n                    return true;\n                case 4 /* GaAction.READ_MAX */:\n                    this._report(`\\x1b[?${params[0]};${0 /* GaStatus.SUCCESS */};${MAX_SIXEL_PALETTE_SIZE}S`);\n                    return true;\n                default:\n                    this._report(`\\x1b[?${params[0]};${2 /* GaStatus.ACTION_ERROR */}S`);\n                    return true;\n            }\n        }\n        if (params[0] === 2 /* GaItem.SIXEL_GEO */) {\n            switch (params[1]) {\n                // we only implement read and read_max here\n                case 1 /* GaAction.READ */:\n                    let width = (_b = (_a = this._renderer) === null || _a === void 0 ? void 0 : _a.dimensions) === null || _b === void 0 ? void 0 : _b.css.canvas.width;\n                    let height = (_d = (_c = this._renderer) === null || _c === void 0 ? void 0 : _c.dimensions) === null || _d === void 0 ? void 0 : _d.css.canvas.height;\n                    if (!width || !height) {\n                        // for some reason we have no working image renderer\n                        // --> fallback to default cell size\n                        const cellSize = CELL_SIZE_DEFAULT;\n                        width = (((_e = this._terminal) === null || _e === void 0 ? void 0 : _e.cols) || 80) * cellSize.width;\n                        height = (((_f = this._terminal) === null || _f === void 0 ? void 0 : _f.rows) || 24) * cellSize.height;\n                    }\n                    if (width * height < this._opts.pixelLimit) {\n                        this._report(`\\x1b[?${params[0]};${0 /* GaStatus.SUCCESS */};${width.toFixed(0)};${height.toFixed(0)}S`);\n                    }\n                    else {\n                        // if we overflow pixelLimit report that squared instead\n                        const x = Math.floor(Math.sqrt(this._opts.pixelLimit));\n                        this._report(`\\x1b[?${params[0]};${0 /* GaStatus.SUCCESS */};${x};${x}S`);\n                    }\n                    return true;\n                case 4 /* GaAction.READ_MAX */:\n                    // read_max returns pixelLimit as square area\n                    const x = Math.floor(Math.sqrt(this._opts.pixelLimit));\n                    this._report(`\\x1b[?${params[0]};${0 /* GaStatus.SUCCESS */};${x};${x}S`);\n                    return true;\n                default:\n                    this._report(`\\x1b[?${params[0]};${2 /* GaStatus.ACTION_ERROR */}S`);\n                    return true;\n            }\n        }\n        // exit with error on ReGIS or any other requests\n        this._report(`\\x1b[?${params[0]};${1 /* GaStatus.ITEM_ERROR */}S`);\n        return true;\n    }\n}\n//# sourceMappingURL=ImageAddon.js.map"],"names":["toRGBA8888","Colors.toRGBA8888","Base64Decoder","DEFAULT_OPTIONS","DecoderAsync","Decoder.DecoderAsync"],"mappings":"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","x_google_ignoreList":[0,3,7]}